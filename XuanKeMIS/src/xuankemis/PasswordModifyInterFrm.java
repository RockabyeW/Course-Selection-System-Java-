/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package xuankemis;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;

import javax.swing.JOptionPane;
import xuankemis.StringUtil;
import xuankemis.DataBase;
import xuankemis.Student;
import xuankemis.ControlObject;

/**
 *
 * @author Administrator
 */
public class PasswordModifyInterFrm extends javax.swing.JFrame {
    DataBase database = new DataBase();
    ControlObject co=new ControlObject();
    /**
     * Creates new form PasswordModifyInterFrm
     */
    public PasswordModifyInterFrm() {
        initComponents();
	int windowWidth = this.getWidth(); //获得窗口宽
        int windowHeight = this.getHeight(); //获得窗口高
        Toolkit kit = Toolkit.getDefaultToolkit(); //定义工具包
        Dimension screenSize = kit.getScreenSize(); //获取屏幕的尺寸
        int screenWidth = screenSize.width; //获取屏幕的宽
        int screenHeight = screenSize.height; //获取屏幕的高
        this.setLocation(screenWidth / 2 - 400 / 2, screenHeight / 2 - 300 / 2);
        this.setExtendedState(JFrame.NORMAL);
        this.setSize(400,300);
        this.setTitle("密码修改");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jb_modify = new javax.swing.JButton();
        jb_reset = new javax.swing.JButton();
        oldPasswordTxt = new javax.swing.JPasswordField();
        newPasswordTxt = new javax.swing.JPasswordField();
        passwordConfirmTxt = new javax.swing.JPasswordField();

        jLabel1.setText("原密码:");

        jLabel2.setText("新密码:");

        jLabel3.setText("再输入一遍新密码:");

        jb_modify.setText("修改");
        jb_modify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_modifyActionPerformed(evt);
            }
        });

        jb_reset.setText("重置");
        jb_reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_resetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(newPasswordTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(passwordConfirmTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(oldPasswordTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(88, 88, 88)
                        .addComponent(jb_modify, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)
                        .addComponent(jb_reset, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(16, 16, 16)))
                .addContainerGap(68, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(oldPasswordTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(newPasswordTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(passwordConfirmTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jb_modify)
                    .addComponent(jb_reset))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jb_modifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_modifyActionPerformed
        try {                                          
            // TODO add your handling code here:
            String oldPassword = new String(this.oldPasswordTxt.getPassword());
            String newPassword = new String(this.newPasswordTxt.getPassword());
            String passwordConfirm = new String(this.passwordConfirmTxt.getPassword());
            if (StringUtil.isEmpty(oldPassword)) {
                JOptionPane.showMessageDialog(this, "原密码不能为空!");
                return;
            }
            if (StringUtil.isEmpty(newPassword)) {
                JOptionPane.showMessageDialog(this, "新密码不能为空!");
                return;
            }
            if (StringUtil.isEmpty(passwordConfirm)) {
                JOptionPane.showMessageDialog(this, "必须重复输入新密码!");
                return;
            }
            Connection con = null;
            con=database.getCon();
            String currentSno=LogOnFrm.currentStudent.GetStudentID();
            Student student = new Student();
            student.setStudentID(currentSno);
            
            String rightOldPassword="";
            try {
                
                
                rightOldPassword = co.QueryPasswd(con, student);
            } catch (SQLException ex) {
                Logger.getLogger(PasswordModifyInterFrm.class.getName()).log(Level.SEVERE, null, ex);
            }
            if (!oldPassword.equals(rightOldPassword)) {
                JOptionPane.showMessageDialog(this, "原密码错误，请重新输入!");
                return;
            }
            if (!newPassword.equals(passwordConfirm)) {
                JOptionPane.showMessageDialog(this, "两次输入的密码必须相同!");
                return;
            }
            student.setSpassword(newPassword);
            try {
                con = database.getCon();
                int modifyNum = co.ModifyPassword(con, student);
                if (modifyNum == 1) {
                    JOptionPane.showMessageDialog(this, "密码修改成功!");
                    this.resetValue();
                    
                } else {
                    JOptionPane.showMessageDialog(this, "密码修改失败!");
                }
            } catch (Exception e) {
                // TODO Auto-generated catch block
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, "修改失败!");
            } finally {
                try {
                    database.closeCon(con);
                } catch (Exception e) {
                    // TODO Auto-generated catch block
                    e.printStackTrace();
                }
            }
        } catch (Exception ex) {
            Logger.getLogger(PasswordModifyInterFrm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jb_modifyActionPerformed
    private void resetValue() {
		this.oldPasswordTxt.setText("");
		this.newPasswordTxt.setText("");
		this.passwordConfirmTxt.setText("");
	}
    private void jb_resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_resetActionPerformed
        // TODO add your handling code here:
        resetValue();
    }//GEN-LAST:event_jb_resetActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PasswordModifyInterFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PasswordModifyInterFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PasswordModifyInterFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PasswordModifyInterFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PasswordModifyInterFrm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JButton jb_modify;
    private javax.swing.JButton jb_reset;
    private javax.swing.JPasswordField newPasswordTxt;
    private javax.swing.JPasswordField oldPasswordTxt;
    private javax.swing.JPasswordField passwordConfirmTxt;
    // End of variables declaration//GEN-END:variables
}
