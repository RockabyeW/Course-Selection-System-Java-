/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package xuankemis;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.print.Book;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import xuankemis.ControlObject;
import xuankemis.FormObject;
import xuankemis.DataBase;
/**
 *
 * @author Administrator
 */
public class CourseManageInterFrm extends javax.swing.JFrame {
    ControlObject co=new ControlObject();
    FormObject fo=new FormObject();
    DataBase db=new DataBase();
    /**
     * Creates new form CourseManageInterFrm
     */
    public CourseManageInterFrm() throws Exception{
          initComponents();
	int windowWidth = this.getWidth(); //获得窗口宽
        int windowHeight = this.getHeight(); //获得窗口高
        Toolkit kit = Toolkit.getDefaultToolkit(); //定义工具包
        Dimension screenSize = kit.getScreenSize(); //获取屏幕的尺寸
        int screenWidth = screenSize.width; //获取屏幕的宽
        int screenHeight = screenSize.height; //获取屏幕的高
        this.setLocation(screenWidth / 2 - 800 / 2, screenHeight / 2 - 600 / 2);
        this.setExtendedState(JFrame.NORMAL);
        this.setSize(800,600);
        this.setTitle("课程管理");
        this.fillTable("","");
        allteachers();
        fillsearchconditon();
        resetValue(); 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jb_delete = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        courseTable = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        courseIdTxt = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        courseNameTxt = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        capacity = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        numselected = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox<>();
        TeacherNameTxt = new javax.swing.JTextField();
        jComboBox2 = new javax.swing.JComboBox<>();
        jPanel1 = new javax.swing.JPanel();
        IdTxt = new javax.swing.JTextField();
        jb_search = new javax.swing.JButton();
        jComboBox3 = new javax.swing.JComboBox<>();
        jb_modify = new javax.swing.JButton();

        jb_delete.setText("删除");
        jb_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_deleteActionPerformed(evt);
            }
        });

        courseTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "课程编号", "课程名称", "教师", "课程时间", "课程容量", "选课人数"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        courseTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                courseTableMousePressed(evt);
            }
        });
        jScrollPane3.setViewportView(courseTable);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("课程信息"));

        courseIdTxt.setEditable(false);
        courseIdTxt.setEnabled(false);

        jLabel4.setText("课程编号");

        jLabel5.setText("课程名称");

        jLabel6.setText("课程容量");

        jLabel7.setText("课程时间");

        jLabel2.setText("任课教师");

        jLabel3.setText("选课人数");

        numselected.setEditable(false);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "星期一", "星期二", "星期三", "星期四", "星期五", "星期六", "星期日" }));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(courseIdTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(72, 72, 72)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel6))
                .addGap(40, 40, 40)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(courseNameTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE)
                    .addComponent(capacity))
                .addGap(34, 34, 34)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(TeacherNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(numselected)))
                .addContainerGap(91, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(courseIdTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(courseNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel2)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TeacherNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel6)
                    .addComponent(capacity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(numselected, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(34, Short.MAX_VALUE))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("搜索条件"));

        jb_search.setText("查询");
        jb_search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_searchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(114, 114, 114)
                .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(61, 61, 61)
                .addComponent(IdTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(78, 78, 78)
                .addComponent(jb_search)
                .addContainerGap(311, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(IdTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jb_search)
                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jb_modify.setText("修改");
        jb_modify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_modifyActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane3)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(330, 330, 330)
                        .addComponent(jb_modify)
                        .addGap(78, 78, 78)
                        .addComponent(jb_delete)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(44, 44, 44))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jb_delete)
                    .addComponent(jb_modify))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void fillTable(String searchConditon,String searchContent) throws Exception {
		DefaultTableModel dtm = (DefaultTableModel) courseTable.getModel();
		dtm.setRowCount(0);
		Connection con = null;
		con = db.getCon();
                
                ResultSet rs =co.QueryCourse(con, searchConditon, searchContent);
                            while (rs.next()) {
                                    Vector v = new Vector();
                                    v.add(rs.getString("courseId"));
                                    v.add(rs.getString("coursename"));
                                    v.add(rs.getString("TId"));
                                    v.add(rs.getString("courseTime"));
                                    v.add(rs.getString("capacity"));
                                    v.add(rs.getString("numselected"));
                                    dtm.addRow(v);
                            }
                        }
    private void fillsearchconditon(){
        jComboBox3.addItem("课程编号");
        jComboBox3.addItem("课程名称");
        jComboBox3.addItem("上课时间");
        jComboBox3.addItem("任课教师");
    }
     private void resetValue() 
        {
		this.courseIdTxt.setText("");
		this.courseNameTxt.setText("");
		this.jComboBox1.setSelectedItem(null);
                this.jComboBox2.setSelectedItem(null);
                this.TeacherNameTxt.setText("");
		this.capacity.setText("");
                this.numselected.setText("");
                this.jComboBox3.setSelectedIndex(0);
	}
    private void allteachers() throws Exception{
    DataBase database=new DataBase();
    jComboBox1.removeAllItems();
    Connection con=null; 
    con=database.getCon();
    ResultSet rs=co.QueryList(con, "tinfo", "tno", "");
    
    while (rs.next()) {
    jComboBox1.addItem(rs.getString("Tno"));
    }
   database.closeCon(con);
    }
    private void jb_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_deleteActionPerformed
        // TODO add your handling code here:
        String courseId = this.courseIdTxt.getText();
        int deleteNum = 0;
        if (StringUtil.isEmpty(courseId)) {
            fo.ShowInfo(this, "编号不能为空!");
            return;
        }

        int n = co.ConfirmDelete(this,"课程", courseId);
        if (n == JOptionPane.YES_OPTION) {
            Connection con = null;
            try {
                con = db.getCon();
            } catch (Exception ex) {
                Logger.getLogger(UserManageInterFrm.class.getName()).log(Level.SEVERE, null, ex);
            }

            try {
                deleteNum=co.DeleteCourse(con,courseId);
            } catch (SQLException ex) {
                Logger.getLogger(UserManageInterFrm.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else{
            return;
        }

        if (deleteNum == 1) {
            fo.ShowInfo(this, "删除成功!");
            this.resetValue();
            try {
                this.fillTable("","");
            } catch (Exception ex) {
                Logger.getLogger(UserManageInterFrm.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else {
            fo.ShowInfo(this, "删除失败!");
        };

    }//GEN-LAST:event_jb_deleteActionPerformed

    private void courseTableMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_courseTableMousePressed
        // TODO add your handling code here:

        int row = courseTable.getSelectedRow();
        this.courseIdTxt.setText((String) courseTable.getValueAt(row, 0));
        this.courseNameTxt.setText((String) courseTable.getValueAt(row, 1));
        this.jComboBox1.setSelectedItem(courseTable.getValueAt(row, 2));
        this.jComboBox2.setSelectedItem(courseTable.getValueAt(row, 3));
        this.capacity.setText((String) courseTable.getValueAt(row, 4));
        this.numselected.setText((String) courseTable.getValueAt(row, 5));
    }//GEN-LAST:event_courseTableMousePressed

    private void jb_searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_searchActionPerformed
        // TODO add your handling code here:
        String searchCondition="";
        String searchContent=this.jComboBox3.getSelectedItem().toString();
        if (searchContent == "课程编号") {
            searchCondition="courseId";
        }
        if (searchContent == "课程名称") {
            searchCondition="courseName";
        }
        if (searchContent == "上课时间") {
            searchCondition="courseTime";
        }
        if (searchContent == "任课教师") {
            searchCondition="TId";
        }
        String search=this.IdTxt.getText(); 
        if (StringUtil.isEmpty(search)) {
            fo.ShowInfo(this, "编号不能为空!");
            return;
        }
        System.out.println(searchCondition);
        System.out.println(search);
        try {
            this.fillTable(searchCondition,search);
        } catch (Exception ex) {
            Logger.getLogger(UserManageInterFrm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jb_searchActionPerformed

    private void jb_modifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_modifyActionPerformed

        // TODO add your handling code here:
        String courseId = this.courseIdTxt.getText();
        String courseName = this.courseNameTxt.getText();
        String Tno=this.jComboBox1.getSelectedItem().toString();
        String courseTime=this.jComboBox2.getSelectedItem().toString();
        Integer capacity=Integer.parseInt(this.capacity.getText());
        Integer numselected=Integer.parseInt(this.numselected.getText());

        if (StringUtil.isEmpty(courseId.toString())) {
            fo.ShowInfo(this, "课程编号不能为空!");
            return;
        }
        if (StringUtil.isEmpty(courseName)) {
            fo.ShowInfo(this, "课程名称不能为空!");
            return;
        }
        if (StringUtil.isEmpty(Tno)) {
            fo.ShowInfo(this, "任课教师不能为空!");
            return;
        }
        if (StringUtil.isEmpty(courseTime)) {
            fo.ShowInfo(this, "课程时间不能为空!");
            return;
        }
        if (StringUtil.isEmpty(capacity.toString())) {
            fo.ShowInfo(this, "课程容量不能为空!");
            return;
        }
        if (StringUtil.isEmpty(numselected.toString())) {
            fo.ShowInfo(this, "选课人数不能为空!");
            return;
        }
        Connection con = null;
        Course course=new Course();
        course.setcourseID(courseId);
        course.setcourseName(courseName);
        course.SetTeacherID(Tno);
        course.setcourseTime(courseTime);
        course.SetmaxStudents(capacity);
        course.SetSelectedStudents(numselected);
        try {
            con = db.getCon();
        } catch (Exception ex) {
            Logger.getLogger(UserManageInterFrm.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {
            if (co.CanModify(con, "t_course", "courseId", courseId))
            {
                try {
                    int modifyNum = 0;
                    modifyNum = co.ModifyCourse(con, course);
                    if (modifyNum == 1) {
                        fo.ShowInfo(this, "修改成功!");
                        this.resetValue();
                        this.fillTable("","");
                    }
                }catch (Exception e) {
                    // TODO Auto-generated catch block
                    e.printStackTrace();
                    fo.ShowInfo(this, "错误!");
                } finally {
                    try {
                        db.closeCon(con);
                    } catch (Exception e) {
                        // TODO Auto-generated catch block
                        e.printStackTrace();
                    }
                }

            }
            else
            {
                fo.ShowInfo(this, "没有这个用户");
            }
        } catch (SQLException ex) {
            Logger.getLogger(UserManageInterFrm.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jb_modifyActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        try {
            // TODO add your handling code here:
            DataBase database=new DataBase();
            String tno=this.jComboBox1.getSelectedItem().toString();
            Connection con=database.getCon();
            ResultSet rs=co.QueryList(con, "tinfo", "tno", tno);
            while (rs.next()) {
                this.TeacherNameTxt.setText(rs.getString("tname"));
            }
            database.closeCon(con);
        } catch (SQLException ex) {
            Logger.getLogger(CourseAddInterFrm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(CourseAddInterFrm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jComboBox1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CourseManageInterFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CourseManageInterFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CourseManageInterFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CourseManageInterFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new CourseManageInterFrm().setVisible(true);
                } catch (Exception ex) {
                    Logger.getLogger(CourseManageInterFrm.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField IdTxt;
    private javax.swing.JTextField TeacherNameTxt;
    private javax.swing.JTextField capacity;
    private javax.swing.JTextField courseIdTxt;
    private javax.swing.JTextField courseNameTxt;
    private javax.swing.JTable courseTable;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton jb_delete;
    private javax.swing.JButton jb_modify;
    private javax.swing.JButton jb_search;
    private javax.swing.JTextField numselected;
    // End of variables declaration//GEN-END:variables
}
