package xuankemis;
import java.sql.Connection;
import java.sql.ResultSet;
import java.util.Vector;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import xuankemis.DataBase;
import xuankemis.ControlObject;
import xuankemis.selectcourse;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Administrator
 */
public class SelectCourseInterFrm extends javax.swing.JFrame {
        DataBase database = new DataBase();
	Course course = new Course();
        ControlObject co=new ControlObject();
	private int capacity;
	private int numSelected;
	private String courseId;
    /**
     * Creates new form SelectCourseInterFrm
     */
    public SelectCourseInterFrm() {
        initComponents();
	this.setLocation(200, 50);
        this.setTitle("选课");
	this.fillTable(course);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        courseTable = new javax.swing.JTable();
        jb_underFull = new javax.swing.JButton();
        jb_confirm = new javax.swing.JButton();

        courseTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "课程编号", "课程名称", "任课老师", "上课时间", "课程容量", "已选人数"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        courseTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                courseTableMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(courseTable);

        jb_underFull.setText("只显示未选满课程");
        jb_underFull.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_underFullActionPerformed(evt);
            }
        });

        jb_confirm.setText("确认选课");
        jb_confirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_confirmActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 610, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(145, 145, 145)
                .addComponent(jb_underFull)
                .addGap(96, 96, 96)
                .addComponent(jb_confirm)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jb_underFull)
                    .addComponent(jb_confirm))
                .addGap(23, 23, 23))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void fillTable(Course course) {
		DefaultTableModel dtm = (DefaultTableModel) courseTable.getModel();
		dtm.setRowCount(0);
		Connection con = null;
		try {
			con = database.getCon();
			ResultSet rs = co.QueryAllCourse(con);
			while (rs.next()) {
				Vector v = new Vector();
				v.add(rs.getString("courseId"));
				v.add(rs.getString("courseName"));
                                v.add(rs.getString("TId"));
				v.add(rs.getString("courseTime"));				
				v.add(rs.getString("capacity"));
				v.add(rs.getString("numSelected"));
				dtm.addRow(v);
			}
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} finally {
			try {
				database.closeCon(con);
			} catch (Exception e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
	}
    private void courseTableMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_courseTableMousePressed
        // TODO add your handling code here:
        int row = courseTable.getSelectedRow();
	courseId = (String) courseTable.getValueAt(row, 0);
	capacity = Integer.parseInt((String) courseTable.getValueAt(row, 4));
	numSelected = Integer.parseInt((String) courseTable.getValueAt(row, 5));
    }//GEN-LAST:event_courseTableMousePressed

    private void jb_underFullActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_underFullActionPerformed
        // TODO add your handling code here:
        DefaultTableModel dtm = (DefaultTableModel) courseTable.getModel();
		dtm.setRowCount(0);
		Connection con = null;
		Course course=new Course();
		try {
			con = database.getCon();
			ResultSet rs =co.QueryUnderFullCourse(con);
			while (rs.next()) {
				Vector v = new Vector();
				v.add(rs.getString("courseId"));
				v.add(rs.getString("courseName"));
                                v.add(rs.getString("TId"));
				v.add(rs.getString("courseTime"));				
				v.add(rs.getString("capacity"));
				v.add(rs.getString("numSelected"));
				dtm.addRow(v);

			}
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} finally {
			try {
				database.closeCon(con);
			} catch (Exception e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
    }//GEN-LAST:event_jb_underFullActionPerformed

    private void jb_confirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_confirmActionPerformed
        // TODO add your handling code here:
        if (courseId == "") {
			JOptionPane.showMessageDialog(this, "请选择一门课程！");
			return;
		}
		if (capacity == numSelected) {
			JOptionPane.showMessageDialog(this, "该课程已经没有名额了！");
			return;
		}

		int n = JOptionPane.showConfirmDialog(this, "确定要选择这门课程吗?");
		if (n == 0) {
			Connection con = null;
			String currentSno = LogOnFrm.currentStudent.GetStudentID();
                        selectcourse sc=new selectcourse();
                        sc.setcourseID(courseId);
                        sc.setsno(currentSno);
                        
			try {
				con = database.getCon();
                                ResultSet rs = sc.isExisted(con);
                                while (rs.next()) {
                                JOptionPane.showMessageDialog(this, "你已经选过这门课程，不能重复选择！");
                                return;    
                                } 
				int selectionNum = sc.SelectionAdd(con);
                               
				int selectedNum = sc.NumSelectedAdd(con);
                                
				if (selectionNum == 1 && selectedNum == 1) {
					JOptionPane.showMessageDialog(this, "选课成功!");
                                        
					this.fillTable(new Course());
				} else {
					JOptionPane.showMessageDialog(this, "选课失败!");
				}
			} catch (Exception e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
				JOptionPane.showMessageDialog(this, "选课失败!");
			} finally {
				try {
					database.closeCon(con);
				} catch (Exception e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}
		}    
        
    }//GEN-LAST:event_jb_confirmActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SelectCourseInterFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SelectCourseInterFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SelectCourseInterFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SelectCourseInterFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SelectCourseInterFrm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable courseTable;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jb_confirm;
    private javax.swing.JButton jb_underFull;
    // End of variables declaration//GEN-END:variables
}
